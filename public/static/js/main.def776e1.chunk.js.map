{"version":3,"sources":["components/Scroll.js","components/ScrollsContainer.js","components/Memo.js","components/MemoForm.js","ColorList.js","components/Paper.js","components/Login.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Scroll","_ref","scrollTitle","scrollLink","paper","currentUser","style","color","backgroundColor","background_color","borderColor","id","user_id","user","name","react_default","a","createElement","className","key","Link","to","pathname","concat","state","Object","objectSpread","textDecoration","ScrollsContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","papers","DOMAIN","_this2","config","headers","Authorization","localStorage","getItem","axios","get","then","response","setState","data","catch","error","console","log","_this3","map","components_Scroll","Component","Memo","handleClick","editMemo","memo","editButton","onClick","btStyle","content","from","MemoForm","completeEditingMemo","document","getElementById","value","defaultValue","textColor","ColorList","Paper","addMemo","match","params","paper_id","post","memos","update","$splice","editingMemoId","memoId","memoContent","memoFrom","patch","memoIndex","findIndex","defineProperty","$set","changeColor","attr","randomColor","Math","floor","random","length","location","bind","assertThisInitialized","createButton","hasMyMemo","some","components_MemoForm","components_Memo","Login","src","alt","placeholder","login","Header","width","height","logout","App","isLoggedIn","jwt","request","auth","email","password","setItem","componentDidMount","removeItem","_this4","BrowserRouter","components_Header","Route","exact","path","render","components_ScrollsContainer","component","components_Login","Boolean","window","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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A,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,gBCUaC,cArJb,SAAAA,EAAY9C,GAAO,IAAAC,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAA2C,IACjB7C,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAkD,GAAAxC,KAAAH,KAAMH,KAiCR+C,QAAU,WAAM,IACPjE,EAAMmB,EAAKD,MAAMgD,MAAMC,OAAvBnE,GACDsC,EAAO,CAAEY,KAAM,CAAEI,QAAS,GAAIC,KAAMpC,EAAKN,MAAMnB,YAAYS,KAAMiE,SAAUpE,EAAIC,QAASkB,EAAKN,MAAMnB,YAAYM,KAC/G4B,EAAS,CACbC,QAAS,CAAEC,cAAe,UAAYC,aAAaC,QAAQ,SAC7DC,IAAMoC,KAAN,GAAAzD,OAAcO,EAAKO,OAAnB,gBAAAd,OAAwCZ,EAAxC,eAAyDsC,EAAMV,GAC9DO,KAAK,SAACC,GACL,IAAMkC,EAAQC,IACZpD,EAAKN,MAAMyD,MAAO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","file":"static/js/main.def776e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './stylesheets/Scroll.css';\r\n\r\nconst Scroll = ({paper, currentUser}) => {\r\n  const style = {\r\n    color: paper.color, \r\n    backgroundColor: paper.background_color,\r\n    borderColor: paper.color\r\n  };\r\n\r\n  let scrollTitle, scrollLink;\r\n  if (currentUser.id === paper.user_id) {\r\n    scrollTitle = '내 롤링페이퍼';\r\n    scrollLink = '읽으러 가기 →';\r\n  } else {\r\n    scrollTitle = paper.user.name;\r\n    scrollLink = '쓰러 가기 →';\r\n  }\r\n\r\n  return (\r\n    <div className=\"scroll\" key={paper.id}>\r\n      <div className=\"ellipse\" style={style}></div>\r\n      <div className=\"side\" style={style}>\r\n        <div className=\"flex-container\">\r\n          <div className=\"scroll-title\">{scrollTitle}</div>\r\n          <Link to={{pathname: `${paper.id}`, state: {paper: paper, currentUser: currentUser}}} style={{...style, textDecoration: 'none'}}>{scrollLink}</Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"ellipse right\" style={style}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Scroll from './Scroll';\r\nimport './stylesheets/ScrollsContainer.css';\r\n\r\nclass ScrollsContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      papers: []\r\n    };\r\n\r\n    this.DOMAIN = 'https://scroll2018.herokuapp.com';\r\n  }\r\n\r\n  componentDidMount() {\r\n    // https://stackoverflow.com/questions/40988238/sending-the-bearer-token-with-axios\r\n    // https://wpsn-axios-example.glitch.me/\r\n    const token = \"bearer \" + localStorage.getItem('jwt');\r\n    const config = {\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    };\r\n    axios.get(`${this.DOMAIN}/api/papers.json`, config)\r\n    .then((response) => {\r\n      this.setState({\r\n        papers: response.data\r\n      });\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"scrolls-container\">\r\n        {this.state.papers.map((paper) => {\r\n          return ( <Scroll paper={paper} key={paper.id} currentUser={this.props.currentUser} /> );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollsContainer;\r\n","import React, { Component } from 'react';\r\nimport './stylesheets/Memo.css';\r\n\r\nclass Memo extends Component {\r\n  handleClick = () => {\r\n    this.props.editMemo(this.props.memo.id); // 수정할 메모의 id를 부모 컴포넌트에게 넘겨줌\r\n  }\r\n\r\n  render() {\r\n    const memo = this.props.memo;\r\n    const currentUser = this.props.currentUser;\r\n\r\n    let editButton;\r\n    if (memo.user_id === currentUser.id) {\r\n      editButton = <button onClick={this.handleClick} style={this.props.btStyle} className=\"memo-bt\">수정하기</button>;\r\n    } else {\r\n      editButton = null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"memo\">\r\n        {editButton}<br />\r\n        <div className=\"content\">{memo.content}</div>\r\n        <div className=\"from\">{memo.from}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Memo;\r\n","import React, { Component } from 'react';\r\nimport './stylesheets/MemoForm.css';\r\n\r\nclass MemoForm extends Component {\r\n  handleClick = () => {\r\n    this.props.completeEditingMemo( // 여기서 바로 http 요청 안 보내는 이유 - Paper 컴포넌트 다시 렌더되라고\r\n      this.props.memo.id,\r\n      document.getElementById('content').value,\r\n      document.getElementById('from').value\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"memoform\">\r\n        <button onClick={this.handleClick} style={this.props.btStyle} className=\"memo-bt\">완료</button>\r\n        <textarea name=\"content\" id=\"content\" defaultValue={this.props.memo.content} className=\"memoform-content\" style={{color: `${this.props.textColor}`}}></textarea>\r\n        <input name=\"from\" id=\"from\" defaultValue={this.props.memo.from} className=\"memoform-from\" style={{color: `${this.props.textColor}`}} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemoForm;\r\n","const ColorList = [\r\n  'AliceBlue', \t\t \t\t\r\n  'AntiqueWhite', \t\t \t\t\r\n  'Aqua', \t\t \t\t\r\n  'Aquamarine', \t\t \t\t\r\n  'Azure', \t\t \t\t\r\n  'Beige', \t\t \t\t\r\n  'Bisque', \t\t \t\t\r\n  'Black', \t\t \t\t\r\n  'BlanchedAlmond', \t\t \t\t\r\n  'Blue', \t\t \t\t\r\n  'BlueViolet', \t\t \t\t\r\n  'Brown', \t\t \t\t\r\n  'BurlyWood', \t\t \t\t\r\n  'CadetBlue', \t\t \t\t\r\n  'Chartreuse', \t\t \t\t\r\n  'Chocolate', \t\t \t\t\r\n  'Coral', \t\t \t\t\r\n  'CornflowerBlue', \t\t \t\t\r\n  'Cornsilk', \t\t \t\t\r\n  'Crimson', \t\t \t\t\r\n  'Cyan', \t\t \t\t\r\n  'DarkBlue', \t\t \t\t\r\n  'DarkCyan', \t\t \t\t\r\n  'DarkGoldenRod', \t\t \t\t\r\n  'DarkGray', \t\t \t\t\r\n  'DarkGrey', \t\t \t\t\r\n  'DarkGreen', \t\t \t\t\r\n  'DarkKhaki', \t\t \t\t\r\n  'DarkMagenta', \t\t \t\t\r\n  'DarkOliveGreen', \t\t \t\t\r\n  'DarkOrange', \t\t \t\t\r\n  'DarkOrchid', \t\t \t\t\r\n  'DarkRed', \t\t \t\t\r\n  'DarkSalmon', \t\t \t\t\r\n  'DarkSeaGreen', \t\t \t\t\r\n  'DarkSlateBlue', \t\t \t\t\r\n  'DarkSlateGray', \t\t \t\t\r\n  'DarkSlateGrey', \t\t \t\t\r\n  'DarkTurquoise', \t\t \t\t\r\n  'DarkViolet', \t\t \t\t\r\n  'DeepPink', \t\t \t\t\r\n  'DeepSkyBlue', \t\t \t\t\r\n  'DimGray', \t\t \t\t\r\n  'DimGrey', \t\t \t\t\r\n  'DodgerBlue', \t\t \t\t\r\n  'FireBrick', \t\t \t\t\r\n  'FloralWhite', \t\t \t\t\r\n  'ForestGreen', \t\t \t\t\r\n  'Fuchsia', \t\t \t\t\r\n  'Gainsboro', \t\t \t\t\r\n  'GhostWhite', \t\t \t\t\r\n  'Gold', \t\t \t\t\r\n  'GoldenRod', \t\t \t\t\r\n  'Gray', \t\t \t\t\r\n  'Grey', \t\t \t\t\r\n  'Green', \t\t \t\t\r\n  'GreenYellow', \t\t \t\t\r\n  'HoneyDew', \t\t \t\t\r\n  'HotPink', \t\t \t\t\r\n  'IndianRed',  \t\t \t\t\r\n  'Indigo',  \t\t \t\t\r\n  'Ivory', \t\t \t\t\r\n  'Khaki', \t\t \t\t\r\n  'Lavender', \t\t \t\t\r\n  'LavenderBlush', \t\t \t\t\r\n  'LawnGreen', \t\t \t\t\r\n  'LemonChiffon', \t\t \t\t\r\n  'LightBlue', \t\t \t\t\r\n  'LightCoral', \t\t \t\t\r\n  'LightCyan', \t\t \t\t\r\n  'LightGoldenRodYellow', \t\t \t\t\r\n  'LightGray', \t\t \t\t\r\n  'LightGrey', \t\t \t\t\r\n  'LightGreen', \t\t \t\t\r\n  'LightPink', \t\t \t\t\r\n  'LightSalmon', \t\t \t\t\r\n  'LightSeaGreen', \t\t \t\t\r\n  'LightSkyBlue', \t\t \t\t\r\n  'LightSlateGray', \t\t \t\t\r\n  'LightSlateGrey', \t\t \t\t\r\n  'LightSteelBlue', \t\t \t\t\r\n  'LightYellow', \t\t \t\t\r\n  'Lime', \t\t \t\t\r\n  'LimeGreen', \t\t \t\t\r\n  'Linen', \t\t \t\t\r\n  'Magenta', \t\t \t\t\r\n  'Maroon', \t\t \t\t\r\n  'MediumAquaMarine', \t\t \t\t\r\n  'MediumBlue', \t\t \t\t\r\n  'MediumOrchid', \t\t \t\t\r\n  'MediumPurple', \t\t \t\t\r\n  'MediumSeaGreen', \t\t \t\t\r\n  'MediumSlateBlue', \t\t \t\t\r\n  'MediumSpringGreen', \t\t \t\t\r\n  'MediumTurquoise', \t\t \t\t\r\n  'MediumVioletRed', \t\t \t\t\r\n  'MidnightBlue', \t\t \t\t\r\n  'MintCream', \t\t \t\t\r\n  'MistyRose', \t\t \t\t\r\n  'Moccasin', \t\t \t\t\r\n  'NavajoWhite', \t\t \t\t\r\n  'Navy', \t\t \t\t\r\n  'OldLace', \t\t \t\t\r\n  'Olive', \t\t \t\t\r\n  'OliveDrab', \t\t \t\t\r\n  'Orange', \t\t \t\t\r\n  'OrangeRed', \t\t \t\t\r\n  'Orchid', \t\t \t\t\r\n  'PaleGoldenRod', \t\t \t\t\r\n  'PaleGreen', \t\t \t\t\r\n  'PaleTurquoise', \t\t \t\t\r\n  'PaleVioletRed', \t\t \t\t\r\n  'PapayaWhip', \t\t \t\t\r\n  'PeachPuff', \t\t \t\t\r\n  'Peru', \t\t \t\t\r\n  'Pink', \t\t \t\t\r\n  'Plum', \t\t \t\t\r\n  'PowderBlue', \t\t \t\t\r\n  'Purple', \t\t \t\t\r\n  'RebeccaPurple', \t\t \t\t\r\n  'Red', \t\t \t\t\r\n  'RosyBrown', \t\t \t\t\r\n  'RoyalBlue', \t\t \t\t\r\n  'SaddleBrown', \t\t \t\t\r\n  'Salmon', \t\t \t\t\r\n  'SandyBrown', \t\t \t\t\r\n  'SeaGreen', \t\t \t\t\r\n  'SeaShell', \t\t \t\t\r\n  'Sienna', \t\t \t\t\r\n  'Silver', \t\t \t\t\r\n  'SkyBlue', \t\t \t\t\r\n  'SlateBlue', \t\t \t\t\r\n  'SlateGray', \t\t \t\t\r\n  'SlateGrey', \t\t \t\t\r\n  'Snow', \t\t \t\t\r\n  'SpringGreen', \t\t \t\t\r\n  'SteelBlue', \t\t \t\t\r\n  'Tan', \t\t \t\t\r\n  'Teal', \t\t \t\t\r\n  'Thistle', \t\t \t\t\r\n  'Tomato', \t\t \t\t\r\n  'Turquoise', \t\t \t\t\r\n  'Violet', \t\t \t\t\r\n  'Wheat', \t\t \t\t\r\n  'White', \t\t \t\t\r\n  'WhiteSmoke', \t\t \t\t\r\n  'Yellow', \t\t \t\t\r\n  'YellowGreen' \t\r\n];\t \r\n\r\nexport default ColorList;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\nimport Memo from './Memo';\r\nimport MemoForm from './MemoForm';\r\nimport './stylesheets/Paper.css';\r\nimport ColorList from '../ColorList';\r\n\r\nclass Paper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: this.props.location.state.currentUser, // 근데 currentUser랑 paper는 상태가 변하지도 않는데 여기다 넣는 게 맞는 건지 모르겠다 그냥 보기 편하려고?\r\n      paper: this.props.location.state.paper, // Link 컴포넌트를 눌렀을 때 받아옴 (위의 currentUser도)\r\n      memos: [],\r\n      id: this.props.match.params,\r\n      editingMemoId: null\r\n    };\r\n    this.editMemo = this.editMemo.bind(this);\r\n\r\n    this.DOMAIN = 'https://scroll2018.herokuapp.com';\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = \"bearer \" + localStorage.getItem('jwt');\r\n    const config = {\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    };\r\n    const {id} = this.props.match.params; // 도대체 this.props.location.state.paper는 뭐고 this.props.match.params는 뭘까....\r\n    axios.get(`${this.DOMAIN}/api/papers/${id}/memos.json`, config)\r\n    .then((response) => {\r\n      this.setState({\r\n        memos: response.data,\r\n        id: id\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  addMemo = () => { // 내가 만든 메소드에서 this를 쓰기 위해 화살표 함수를 씀 여기서는\r\n    const {id} = this.props.match.params;\r\n    const data = { memo: { content: '', from: this.state.currentUser.name, paper_id: id, user_id: this.state.currentUser.id }};\r\n    const config = { \r\n      headers: { Authorization: \"bearer \" + localStorage.getItem('jwt')}};\r\n    axios.post(`${this.DOMAIN}/api/papers/${id}/memos.json`, data, config)\r\n    .then((response) => {\r\n      const memos = update(\r\n        this.state.memos, {\r\n          $splice: [[0, 0, response.data]]\r\n        }\r\n      );\r\n      this.setState({ \r\n        memos: memos,\r\n        editingMemoId: response.data.id\r\n      });\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  editMemo = (memoId) => {\r\n    this.setState({ editingMemoId: memoId });\r\n  }\r\n\r\n  completeEditingMemo = (memoId, memoContent, memoFrom) => {\r\n    const {id} = this.props.match.params;\r\n    const data = {\r\n      memo: {\r\n        id: memoId,\r\n        content: memoContent,\r\n        from: memoFrom,\r\n        paper_id: id,\r\n        user_id: this.state.currentUser.id\r\n      }\r\n    };\r\n    const config = { headers: {Authorization: \"bearer \" + localStorage.getItem('jwt')}};\r\n    axios.patch(`${this.DOMAIN}/api/papers/${id}/memos/${memoId}.json`, data, config)\r\n    .then((response) => {\r\n      const memoIndex = this.state.memos.findIndex((memo) => memo.id === memoId);\r\n      const memos = update( this.state.memos, {\r\n        [memoIndex]: { $set: response.data } \r\n      });\r\n      this.setState({ \r\n        memos: memos,\r\n        editingMemoId: null });\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  changeColor = (attr) => {\r\n    const randomColor = ColorList[Math.floor(Math.random() * ColorList.length)];\r\n    const {id} = this.props.match.params;\r\n    const data = {\r\n      paper: {\r\n        id: id,\r\n        color: attr === 'color' ? randomColor : this.state.paper.color,\r\n        background_color: attr === 'color' ? this.state.paper.background_color : randomColor\r\n      }\r\n    };\r\n    const config = { headers: {Authorization: \"bearer \" + localStorage.getItem('jwt')}};\r\n    axios.patch(`${this.DOMAIN}/api/papers/${id}.json`, data, config)\r\n    .then((response) => {\r\n      this.setState({ paper: response.data });\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      color: this.state.paper.color,\r\n      backgroundColor: this.state.paper.background_color,\r\n      borderColor: this.state.paper.color\r\n    };\r\n    const btStyle = {\r\n      color: this.state.paper.background_color,\r\n      backgroundColor: this.state.paper.color\r\n    }\r\n\r\n    let createButton;\r\n    let hasMyMemo = false;\r\n    if (this.state.currentUser.id !== this.state.paper.user_id) {\r\n      this.state.memos.some((memo) => {\r\n        if (memo.user_id === this.state.currentUser.id) { // 이미 써준 적이 있으면\r\n          hasMyMemo = true;\r\n        }\r\n      });\r\n      hasMyMemo ? ( createButton = null ) : ( createButton = <button className=\"paper-bt\" style={btStyle} onClick={this.addMemo}>써주기</button> );\r\n    } else {\r\n      createButton = (\r\n        // https://stackoverflow.com/questions/29810914/react-js-onclick-cant-pass-value-to-method\r\n        <div>\r\n          <button onClick={() => this.changeColor('color')} name=\"color\" id=\"color\" className=\"paper-bt\" style={btStyle}>선 색 바꾸기</button>\r\n          <button onClick={() => this.changeColor('background_color')} name=\"background_color\" id=\"background_color\" className=\"paper-bt\" style={btStyle}>배경 색 바꾸기</button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"paper\" style={style}>\r\n        <div className=\"title\">\r\n          <div className=\"user-name\">{`${this.state.paper.user.name}의 롤링페이퍼`}</div> {/* 이름이 자음으로 끝나면 어색해서 어떡하지 이것까지 신경쓸 시간이 생기려나 */}\r\n          {createButton}\r\n        </div>\r\n        {this.state.memos.map((memo) => {\r\n          if (memo.id === this.state.editingMemoId) {\r\n            return ( <MemoForm memo={memo} key={memo.id} currentUser={this.state.currentUser} completeEditingMemo={this.completeEditingMemo} btStyle={btStyle} textColor={this.state.paper.color} /> );\r\n          } else {\r\n            return ( <Memo memo={memo} key={memo.id} currentUser={this.state.currentUser} editMemo={this.editMemo} btStyle={btStyle} /> );\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Paper;\r\n","import React from 'react';\r\nimport './stylesheets/Login.css';\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div className=\"loginBox\">\r\n      <img src=\"/scroll_logo.png\" alt=\"scroll logo\"></img>\r\n      <h1>SCROLL</h1>\r\n      <form>\r\n        <div className=\"Name\">\r\n          {/* <label>Email</label> */}\r\n          <input name=\"name\" id=\"name\" placeholder=\"NAME\"/>\r\n        </div>\r\n        <div className=\"Email\">\r\n          {/* <label>Email</label> */}\r\n          <input name=\"email\" id=\"email\" placeholder=\"EMAIL\"/>\r\n        </div>\r\n        <div className=\"Password\">\r\n          {/* <label>Password</label> */}\r\n          <input name=\"password\" id=\"password\" placeholder=\"PASSWORD\"/>\r\n        </div>\r\n      </form>\r\n      <button onClick={props.login}>LOG IN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './stylesheets/Header.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <Link to=\"/\"><img id=\"logo\" src=\"/scroll_logo.png\" alt=\"home\" width=\"32\" height=\"32\"></img></Link>\r\n      <div>SNULION 2018</div>\r\n      <button onClick={props.logout}>LOGOUT</button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport ScrollsContainer from './components/ScrollsContainer';\nimport Paper from './components/Paper';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: localStorage.jwt ? true : false,\n      currentUser: null\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n\n    this.DOMAIN = 'https://scroll2018.herokuapp.com';\n  }\n\n  componentDidMount() {\n    const config = { \n      headers: { \n        Authorization: \"bearer \" + localStorage.getItem('jwt') \n      }\n    };\n    axios.get(`${this.DOMAIN}/api/get_current_user`, config)\n    .then((response) => {\n      this.setState({ currentUser: response.data });\n    })\n    .catch((error) => console.log(error));\n  }\n  \n  login() {\n    const request = {\n      auth: {\n        name: document.getElementById('name').value,\n        email: document.getElementById('email').value,\n        password: document.getElementById('password').value\n      }\n    };\n    axios.post(`${this.DOMAIN}/api/user_token`, request)\n    .then((response) => {\n      localStorage.setItem('jwt', response.data.jwt);\n      this.setState({ isLoggedIn: true });\n      this.componentDidMount(); // 이게 좋은 방법인지는 잘 모르겠지만..!\n    })\n    .catch((error) => console.log(error));\n  }\n\n  logout() {\n    localStorage.removeItem('jwt');\n    this.setState({\n      isLoggedIn: false,\n      currentUser: null\n    });\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Header logout={this.logout} />\n            <Route exact path=\"/\" render={() => <ScrollsContainer currentUser={this.state.currentUser}/>} />\n            {/* <Route path=\"/:id\" render={() => <Paper currentUser={this.state.currentUser}/>} /> */}\n            <Route path=\"/:id\" component={Paper} /> {/* 왜 ScrollsContainer처럼 여기다 props를 전달하면 안 되고 Link로 전달해야 할까???? */}\n          </div>\n        </BrowserRouter>\n      );\n    } else {\n      return <Login login={this.login} />;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}