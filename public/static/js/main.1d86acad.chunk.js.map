{"version":3,"sources":["components/Scroll.js","components/ScrollsContainer.js","components/Memo.js","components/MemoForm.js","components/Paper.js","components/Login.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Scroll","_ref","paper","currentUser","style","color","backgroundColor","background_color","borderColor","react_default","a","createElement","className","key","id","user_id","Link","to","pathname","concat","state","Object","objectSpread","textDecoration","ScrollsContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","papers","_this2","config","headers","Authorization","localStorage","getItem","axios","get","then","response","setState","data","catch","error","console","log","_this3","map","components_Scroll","Component","Memo","handleClick","editMemo","memo","editButton","onClick","content","from","MemoForm","completeEditingMemo","document","getElementById","value","name","defaultValue","Paper","addMemo","match","params","email","paper_id","post","memos","update","$splice","editingMemoId","memoId","memoContent","memoFrom","patch","memoIndex","findIndex","defineProperty","$set","location","bind","assertThisInitialized","createButton","btStyle","hasMyMemo","some","components_MemoForm","components_Memo","Login","login","Header","logout","App","isLoggedIn","jwt","request","auth","password","setItem","componentDidMount","removeItem","_this4","BrowserRouter","components_Header","Route","exact","path","render","components_ScrollsContainer","component","components_Login","Boolean","window","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d86acad.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './stylesheets/Scroll.css';\r\n\r\nconst Scroll = ({paper, currentUser}) => {\r\n  const style = {\r\n    color: paper.color, \r\n    backgroundColor: paper.background_color,\r\n    borderColor: paper.color\r\n  };\r\n\r\n  return (\r\n    <div className=\"scroll\" key={paper.id}>\r\n      <div className=\"ellipse\" style={style}></div>\r\n      <div className=\"side\" style={style}>\r\n        <div className=\"flex-container\">\r\n          {currentUser.id === paper.user_id ? \r\n          ( <h4>내 롤링페이퍼</h4> ) : ( <h4>{paper.color}</h4> )\r\n          }\r\n          <Link to={{pathname: `${paper.id}`, state: {paper: paper, currentUser: currentUser}}} style={{...style, textDecoration: 'none'}}>쓰러 가기?</Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"ellipse right\" style={style}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Scroll from './Scroll';\r\nimport './stylesheets/ScrollsContainer.css';\r\n\r\nclass ScrollsContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      papers: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // https://stackoverflow.com/questions/40988238/sending-the-bearer-token-with-axios\r\n    // https://wpsn-axios-example.glitch.me/\r\n    const token = \"bearer \" + localStorage.getItem('jwt');\r\n    const config = {\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    };\r\n    axios.get('http://localhost:3001/api/papers.json', config)\r\n    .then((response) => {\r\n      this.setState({\r\n        papers: response.data\r\n      });\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"scrolls-container\">\r\n        {this.state.papers.map((paper) => {\r\n          return ( <Scroll paper={paper} key={paper.id} currentUser={this.props.currentUser} /> );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollsContainer;\r\n","import React, { Component } from 'react';\r\nimport './stylesheets/Memo.css';\r\n\r\nclass Memo extends Component {\r\n  handleClick = () => {\r\n    this.props.editMemo(this.props.memo.id); // 수정할 메모의 id를 부모 컴포넌트에게 넘겨줌\r\n  }\r\n\r\n  render() {\r\n    const memo = this.props.memo;\r\n    const currentUser = this.props.currentUser;\r\n\r\n    let editButton;\r\n    if (memo.user_id === currentUser.id) {\r\n      editButton = <button onClick={this.handleClick}>edit</button>;\r\n    } else {\r\n      editButton = null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"memo\">\r\n        {editButton}\r\n        <div className=\"content\">{memo.content}</div>\r\n        <div className=\"from\">{memo.from}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Memo;\r\n","import React, { Component } from 'react';\r\n\r\nclass MemoForm extends Component {\r\n  handleClick = () => {\r\n    this.props.completeEditingMemo( // 여기서 바로 http 요청 안 보내는 이유 - Paper 컴포넌트 다시 렌더되라고\r\n      this.props.memo.id,\r\n      document.getElementById('content').value,\r\n      document.getElementById('from').value\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <textarea name=\"content\" id=\"content\" defaultValue={this.props.memo.content}></textarea>\r\n          <input name=\"from\" id=\"from\" defaultValue={this.props.memo.from} />\r\n        </form>\r\n        <button onClick={this.handleClick}>수정 완료</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemoForm;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\nimport Memo from './Memo';\r\nimport MemoForm from './MemoForm';\r\nimport './stylesheets/Paper.css';\r\n\r\nclass Paper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: this.props.location.state.currentUser, // 근데 currentUser랑 paper는 상태가 변하지도 않는데 여기다 넣는 게 맞는 건지 모르겠다 그냥 보기 편하려고?\r\n      paper: this.props.location.state.paper, // Link 컴포넌트를 눌렀을 때 받아옴 (위의 currentUser도)\r\n      memos: [],\r\n      id: this.props.match.params,\r\n      editingMemoId: null\r\n    };\r\n    this.editMemo = this.editMemo.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = \"bearer \" + localStorage.getItem('jwt');\r\n    const config = {\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    };\r\n    const {id} = this.props.match.params; // 도대체 this.props.location.state.paper는 뭐고 this.props.match.params는 뭘까....\r\n    axios.get(`http://localhost:3001/api/papers/${id}/memos.json`, config)\r\n    .then((response) => {\r\n      this.setState({\r\n        memos: response.data,\r\n        id: id\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  addMemo = () => { // 내가 만든 메소드에서 this를 쓰기 위해 화살표 함수를 씀 여기서는\r\n    const {id} = this.props.match.params;\r\n    const data = { memo: { content: '', from: this.state.currentUser.email, paper_id: id, user_id: this.state.currentUser.id }};\r\n    const config = { \r\n      headers: { Authorization: \"bearer \" + localStorage.getItem('jwt')}};\r\n    axios.post(`http://localhost:3001/api/papers/${id}/memos.json`, data, config)\r\n    .then((response) => {\r\n      const memos = update(\r\n        this.state.memos, {\r\n          $splice: [[0, 0, response.data]]\r\n        }\r\n      );\r\n      this.setState({ \r\n        memos: memos,\r\n        editingMemoId: response.data.id\r\n      });\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  editMemo = (memoId) => {\r\n    this.setState({ editingMemoId: memoId });\r\n  }\r\n\r\n  completeEditingMemo = (memoId, memoContent, memoFrom) => {\r\n    console.log(memoContent, memoFrom);\r\n    const {id} = this.props.match.params;\r\n    const data = {\r\n      memo: {\r\n        id: memoId,\r\n        content: memoContent,\r\n        from: memoFrom,\r\n        paper_id: id,\r\n        user_id: this.state.currentUser.id\r\n      }\r\n    };\r\n    const config = { headers: {Authorization: \"bearer \" + localStorage.getItem('jwt')}};\r\n    axios.patch(`http://localhost:3001/api/papers/${id}/memos/${memoId}.json`, data, config)\r\n    .then((response) => { console.log(response);\r\n      const memoIndex = this.state.memos.findIndex((memo) => memo.id === memoId);\r\n      const memos = update( this.state.memos, {\r\n        [memoIndex]: { $set: response.data } \r\n      });\r\n      this.setState({ \r\n        memos: memos,\r\n        editingMemoId: null }); console.log(this.state.memos);\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      color: this.state.paper.color,\r\n      backgroundColor: this.state.paper.background_color,\r\n      borderColor: this.state.paper.color\r\n    };\r\n    const btStyle = {\r\n      color: this.state.paper.background_color,\r\n      backgroundColor: this.state.paper.color\r\n    }\r\n\r\n    let createButton;\r\n    let hasMyMemo = false;\r\n    if (this.state.currentUser.id !== this.state.paper.user_id) {\r\n      this.state.memos.some((memo) => {\r\n        if (memo.user_id === this.state.currentUser.id) { // 이미 써준 적이 있으면\r\n          hasMyMemo = true;\r\n        }\r\n      });\r\n      hasMyMemo ? ( createButton = null ) : ( createButton = <button className=\"write-bt\" style={btStyle} onClick={this.addMemo}>써주기</button> );\r\n    } else {\r\n      createButton = null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"paper\" style={style}>\r\n        <div className=\"title\">\r\n          <div className=\"user-name\">~~~의 롤링페이퍼</div> {/* 헐 롤링페이퍼 주인 이름은 또 어떻게 가져오지 */}\r\n          {createButton}\r\n        </div>\r\n        {this.state.memos.map((memo) => {\r\n          if (memo.id === this.state.editingMemoId) {\r\n            return ( <MemoForm memo={memo} key={memo.id} currentUser={this.state.currentUser} completeEditingMemo={this.completeEditingMemo} /> );\r\n          } else {\r\n            return ( <Memo memo={memo} key={memo.id} currentUser={this.state.currentUser} editMemo={this.editMemo} /> );\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Paper;\r\n","import React from 'react';\r\nimport './stylesheets/Login.css';\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n      <form>\r\n        <label>Email</label>\r\n        <input name=\"email\" id=\"email\" />\r\n        <label>Password</label>\r\n        <input name=\"password\" id=\"password\" />\r\n      </form>\r\n      <button onClick={props.login}>login</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './stylesheets/Header.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <Link to=\"/\">Home</Link>\r\n      <div>snulion2018</div>\r\n      <button onClick={props.logout}>logout</button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport ScrollsContainer from './components/ScrollsContainer';\nimport Paper from './components/Paper';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: localStorage.jwt ? true : false,\n      currentUser: null\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    const config = { \n      headers: { \n        Authorization: \"bearer \" + localStorage.getItem('jwt') \n      }\n    };\n    axios.get('http://localhost:3001/api/get_current_user', config)\n    .then((response) => { console.log(response);\n      this.setState({ currentUser: response.data });\n    })\n    .catch((error) => console.log(error));\n  }\n  \n  login() {\n    const request = {\n      auth: {\n        email: document.getElementById('email').value,\n        password: document.getElementById('password').value\n      }\n    };\n    axios.post('http://localhost:3001/api/user_token', request)\n    .then((response) => {\n      localStorage.setItem('jwt', response.data.jwt);\n      this.setState({ isLoggedIn: true });\n      this.componentDidMount(); // 이게 좋은 방법인지는 잘 모르겠지만..!\n    })\n    .catch((error) => console.log(error));\n  }\n\n  logout() {\n    localStorage.removeItem('jwt');\n    this.setState({\n      isLoggedIn: false,\n      currentUser: null\n    });\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Header logout={this.logout} />\n            <Route exact path=\"/\" render={() => <ScrollsContainer currentUser={this.state.currentUser}/>} /> {/* 토큰을 App 컴포넌트에서 받아 오는 거랑 localStorage에서  받아오는것중에 뭐가 더 좋을까??!! */}\n            {/* <Route path=\"/:id\" render={() => <Paper currentUser={this.state.currentUser}/>} /> */}\n            <Route path=\"/:id\" component={Paper} /> {/* 왜 ScrollsContainer처럼 여기다 props를 전달하면 안 되고 Link로 전달해야 할까???? */}\n          </div>\n        </BrowserRouter>\n      );\n    } else {\n      return <Login login={this.login} />;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}